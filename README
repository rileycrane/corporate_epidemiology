################################################################################
# ** REQUIREMENTS
python
django
python-numpy

################################################################################
# ** GETTING STARTED
* INSTALL ABOVE REQUIREMENTS

* SET ENVIRONMENT VARIABLES:
>>>export DJANGO_SETTINGS_MODULE=coporate_epidemiology.settings

* SET UP THE DATABASE
>>>python manage.py syncdb

* CREATE AN ADMIN SUPERUSER
>>>python manage.py createsuperuser

* START THE SERVER
>>>python manage.py runserver

* CHANGE THE SITE VARIABLE
	with your browser visit: http://127.0.0.1:8000/admin/
	enter your superuser credentials (see step above to create supersuser)
	click on "Sites": http://127.0.0.1:8000/admin/sites/site/
	click on "example.com": http://127.0.0.1:8000/admin/sites/site/1/
	change domain name to "127.0.0.1:8000"
	change display name to "Corp. Epi"
	click "Save" in bottom right corner

DEFINE YOUR CALCULATION IN 'simulations/calculations.py'
THEN RUN YOUR CALCULATION
>>>python simulations/simulation.py



################################################################################
# ** SPECIFY PARAMETERS (in parameters.py)
#
#  Each simulation requires (beta,Y0,t_min_filter, t_max_filter)
#	Y0 can be generated by editing line 30 in simulations/simulation.py
#		The documentation for generating Y0 can be found in simulations/parameters: generate_initial_infected()
#	t_min_filter = sets the MINIMUM valid contact time.  if the duration of contact was less
#					than this, we will exclude it from the simulation
#	t_max_filter = sets the MAXIMUM valid contact time.  if the duration of contact was greater
#					than this, we will exclude it from the simulation
#	beta  = probability of disease transmission
#	gamma = recovery rate


##################################################
# ** CREATING THE INITIAL DATA (NOTE: You probably won't need to do this)
# run: simulations.initial_processing.load_individuals

# ** DUMPING THE INITIAL DATA
# python manage.py dumpdata simulations > simulations/fixtures/initial_data.json




##########################################
# ** TO DO
#	Extend model to send individuals home
#	Generate Network Structure for each run
#	For each individual, capture when illness begins and ends
#	Incorporate Recovery Times
#	Get rid of S, I, T timeseries (no need to capture them)
#		Instead move the SimRun methods into fields

####################################################
####################################################
# ** COMMON ERRORS
####################################################

----------------------------------------------------
Traceback (most recent call last):
  File "simulations/initial_processing.py", line 7, in <module>
    from simulations.models import *
  File "/home/rcrane/local/django/django_projects/corporate_epidemiology/simulations/models.py", line 1, in <module>
    from django.db import models
  File "/usr/lib/pymodules/python2.6/django/db/__init__.py", line 14, in <module>
    if not settings.DATABASES:
  File "/usr/lib/pymodules/python2.6/django/utils/functional.py", line 276, in __getattr__
    self._setup()
  File "/usr/lib/pymodules/python2.6/django/conf/__init__.py", line 38, in _setup
    raise ImportError("Settings cannot be imported, because environment variable %s is undefined." % ENVIRONMENT_VARIABLE)
ImportError: Settings cannot be imported, because environment variable DJANGO_SETTINGS_MODULE is undefined.

at the command line (or however you manage your environment variables)
	set the following variable: DJANGO_SETTINGS_MODULE = corporate_epidemiology.settings 
	for example in linux: export DJANGO_SETTINGS_MODULE=corporate_epidemiology.settings
	
----------------------------------------------------	